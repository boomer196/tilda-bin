#!/usr/bin/env bash

#
# Copyright (c) 2006-2009 Ryan McGeary
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

# --------------------------------------------------

#
# USAGE:  ssh-init <ssh-args>
#
#   Example:  ssh-init bob@server.domain.com
#   Example:  ssh-init 2222 bob@server.domain.com
#

# --------------------------------------------------

#
# Push your public key to the remote server and append it to the
# authorized_keys file if it's not already there.
#

ssh_args=$*

if [ $# -gt 0 ]; then
  ssh-copy-id ${ssh_args}
else
  echo 'Remote server not specified.  Quitting.'
  exit 1
fi

# --------------------------------------------------

#
# Sync your .bashrc and .bash_profile file to the remote server, but only if
# they differ.  Backups are created if necessary.
#

while [ $# -gt 1 ]; do
  rsync_ssh_args="$rsync_ssh_args $1"
  shift
done
rsync_ssh_host=$*

# echo 'Syncing ~/bin ...'
# rsync -abrL --exclude '*~' --exclude ".svn/" --exclude ".git/" --exclude "private/" -e "ssh ${rsync_ssh_args}" ~/bin ${rsync_ssh_host}:~/

echo 'Syncing ~/.bashrc ...'
rsync -abL -e "ssh ${rsync_ssh_args}" ~/.bashrc ${rsync_ssh_host}:~/

echo 'Syncing ~/.bash_profile ...'
rsync -abL -e "ssh ${rsync_ssh_args}" ~/.bash_profile ${rsync_ssh_host}:~/

echo 'Syncing ~/.bash_aliases ...'
rsync -abL -e "ssh ${rsync_ssh_args}" ~/.bash_aliases ${rsync_ssh_host}:~/

echo 'Syncing ~/.bash_powerline ...'
rsync -abL -e "ssh ${rsync_ssh_args}" ~/.bash_powerline ${rsync_ssh_host}:~/

echo 'Touching ~/.bash_local ...'
ssh ${ssh_args} "if [ -f ~/.bash_env ]; then mv ~/.bash_env ~/.bash_local; fi"
ssh ${ssh_args} "touch ~/.bash_local"

echo

# --------------------------------------------------

echo 'Done.'
exit 0

# --------------------------------------------------
